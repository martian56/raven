print("=== MEGA MATHEMATICAL CALCULATOR ===");
print("");

let numberA: int = 42;
let numberB: int = 7;
let numberC: int = 3;

print("Input values:");
print("A =");
print(numberA);
print("B =");
print(numberB);
print("C =");
print(numberC);
print("");

print("=== BASIC OPERATIONS ===");

let sum: int = numberA + numberB;
print("A + B =");
print(sum);

let difference: int = numberA - numberB;
print("A - B =");
print(difference);

let product: int = numberA * numberB;
print("A * B =");
print(product);

let quotient: int = numberA / numberB;
print("A / B =");
print(quotient);

print("");
print("=== COMPLEX OPERATIONS ===");

let complexResult1: int = numberA * numberB + numberC;
print("A * B + C =");
print(complexResult1);

let complexResult2: int = (numberA + numberB) * numberC;
print("(A + B) * C =");
print(complexResult2);

let complexResult3: int = numberA * (numberB - numberC);
print("A * (B - C) =");
print(complexResult3);

let chainedOp: int = numberA + numberB - numberC;
print("A + B - C =");
print(chainedOp);

print("");
print("=== POWER CALCULATIONS ===");

let squareA: int = numberA * numberA;
print("A² =");
print(squareA);

let squareB: int = numberB * numberB;
print("B² =");
print(squareB);

let cubeC: int = numberC * numberC * numberC;
print("C³ =");
print(cubeC);

print("");
print("=== FACTORIAL CALCULATIONS ===");

let factorialInput: int = 5;
print("Calculating factorial of:");
print(factorialInput);

let factorial: int = 1;
let i: int = 1;

while (i <= factorialInput) {
    factorial = factorial * i;
    i = i + 1;
}

print("Result:");
print(factorial);

let factorial2: int = 1;
for (let j: int = 1; j <= 6; j = j + 1) {
    factorial2 = factorial2 * j;
}
print("6! =");
print(factorial2);

print("");
print("=== FIBONACCI SEQUENCE ===");

print("First 15 Fibonacci numbers:");

let fib1: int = 0;
let fib2: int = 1;
let fibCount: int = 0;

print(fib1);
print(fib2);

while (fibCount < 13) {
    let fibNext: int = fib1 + fib2;
    print(fibNext);
    fib1 = fib2;
    fib2 = fibNext;
    fibCount = fibCount + 1;
}

print("");
print("=== SUMMATION SERIES ===");

print("Sum of integers 1 to 20:");
let seriesSum: int = 0;
for (let n: int = 1; n <= 20; n = n + 1) {
    seriesSum = seriesSum + n;
}
print(seriesSum);

print("Sum of even numbers 1 to 30:");
let evenSum: int = 0;
let current: int = 2;
while (current <= 30) {
    evenSum = evenSum + current;
    current = current + 2;
}
print(evenSum);

print("Sum of odd numbers 1 to 29:");
let oddSum: int = 0;
let oddCurrent: int = 1;
while (oddCurrent <= 29) {
    oddSum = oddSum + oddCurrent;
    oddCurrent = oddCurrent + 2;
}
print(oddSum);

print("");
print("=== DIVISIBILITY ANALYSIS ===");

let testNumber: int = 120;
print("Analyzing divisors of:");
print(testNumber);

let divisorCount: int = 0;
let divisorSum: int = 0;
let divisor: int = 1;

while (divisor <= testNumber) {
    let remainder: int = testNumber - divisor * (testNumber / divisor);
    
    if (remainder == 0) {
        print("Divisor:");
        print(divisor);
        divisorCount = divisorCount + 1;
        divisorSum = divisorSum + divisor;
    }
    
    divisor = divisor + 1;
}

print("Total divisors:");
print(divisorCount);
print("Sum of divisors:");
print(divisorSum);

print("");
print("=== PERFECT NUMBER CHECK ===");

let perfectTest: int = 28;
print("Testing if perfect:");
print(perfectTest);

let properDivisorSum: int = 0;
let d: int = 1;

while (d < perfectTest) {
    let rem: int = perfectTest - d * (perfectTest / d);
    if (rem == 0) {
        properDivisorSum = properDivisorSum + d;
    }
    d = d + 1;
}

if (properDivisorSum == perfectTest) {
    print("YES! It is a PERFECT number!");
} else {
    print("Not a perfect number.");
}

print("");
print("=== COLLATZ CONJECTURE ===");

let collatzStart: int = 27;
print("Starting value:");
print(collatzStart);

let collatzSteps: int = 0;
let collatzValue: int = collatzStart;

print("Sequence:");
while (collatzValue != 1) {
    print(collatzValue);
    
    let isEven: int = collatzValue / 2 * 2;
    
    if (isEven == collatzValue) {
        collatzValue = collatzValue / 2;
    } else {
        collatzValue = collatzValue * 3 + 1;
    }
    
    collatzSteps = collatzSteps + 1;
    
    if (collatzSteps > 50) {
        print("Stopped at 50 steps");
        collatzValue = 1;
    }
}

print(1);
print("Steps to reach 1:");
print(collatzSteps);

print("");
print("=== CALCULATION COMPLETE ===");


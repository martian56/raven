print("=== PRIME NUMBER ANALYZER ===");
print("");

let rangeEnd: int = 30;

print("Finding primes from 2 to:");
print(rangeEnd);
print("");

let primeCount: int = 0;
let sumOfPrimes: int = 0;

let currentNumber: int = 2;

while (currentNumber <= rangeEnd) {
    let isPrime: bool = true;
    let divisor: int = 2;
    let halfCurrent: int = currentNumber / 2;
    
    if (currentNumber > 2) {
        let shouldContinue: bool = true;
        
        while (shouldContinue) {
            let quotient: int = currentNumber / divisor;
            let product: int = quotient * divisor;
            let remainder: int = currentNumber - product;
            
            if (remainder == 0) {
                isPrime = false;
            }
            
            divisor = divisor + 1;
            
            let notExceeded: bool = divisor <= halfCurrent;
            shouldContinue = notExceeded && isPrime;
        }
    }
    
    if (isPrime) {
        print("Found prime:");
        print(currentNumber);
        primeCount = primeCount + 1;
        sumOfPrimes = sumOfPrimes + currentNumber;
    }
    
    currentNumber = currentNumber + 1;
}

print("");
print("=== RESULTS ===");
print("Total primes found:");
print(primeCount);

print("Sum of all primes:");
print(sumOfPrimes);

if (primeCount > 0) {
    let average: int = sumOfPrimes / primeCount;
    print("Average prime value:");
    print(average);
}

print("");
print("=== LARGEST PRIME FACTORS ===");

let numberToFactor: int = 60;
print("Finding prime factors of:");
print(numberToFactor);

let factor: int = 2;
let remaining: int = numberToFactor;

while (factor <= remaining) {
    let q: int = remaining / factor;
    let p: int = q * factor;
    let r: int = remaining - p;
    
    if (r == 0) {
        print("Factor:");
        print(factor);
        remaining = q;
        factor = 2;
    } else {
        factor = factor + 1;
    }
}

print("");
print("=== PERFECT SQUARE CHECK ===");

let testSquare: int = 16;
print("Testing:");
print(testSquare);

let root: int = 1;
let found: bool = false;

while (root * root <= testSquare) {
    let square: int = root * root;
    if (square == testSquare) {
        print("Perfect square! Root:");
        print(root);
        found = true;
    }
    root = root + 1;
}

if (found == false) {
    print("Not a perfect square");
}

print("");
print("=== ANALYSIS COMPLETE ===");

